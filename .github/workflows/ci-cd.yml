jobs:
  infra-build:
    needs: image-build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials for Terraform
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure Terraform Directory Exists
        run: mkdir -p ./terraform  # Create the 'terraform' directory if it doesn't exist

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"  # Specify Terraform version to use

      - name: Initialize Terraform
        run: terraform -chdir=./terraform init  # Initialize the Terraform working directory and install plugins

      - name: Set PLAN_FILE as Environment Variable
        run: echo "PLAN_FILE=./terraform/${{ env.EKS_CLUSTER_NAME }}-plan.out" >> $GITHUB_ENV  # Set the PLAN_FILE dynamically

      - name: Check if terraform plan exists
        id: plan_check
        run: |
          # Use the PLAN_FILE environment variable to check if the plan exists
          if [ -f "$PLAN_FILE" ]; then
            echo "Terraform plan exists: $PLAN_FILE"
            echo "PLAN_EXISTS=true" >> $GITHUB_ENV
          else
            echo "Terraform plan does not exist: $PLAN_FILE"
            echo "PLAN_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Generate and Apply Terraform Plan (if no plan exists)
        if: env.PLAN_EXISTS == 'false'
        run: |
          echo "Generating Terraform Plan..."
          terraform -chdir=./terraform plan -out="$PLAN_FILE"  # Generate the plan and save it
          
          if [ -f "$PLAN_FILE" ]; then
            echo "Terraform plan generated successfully: $PLAN_FILE"
            terraform -chdir=./terraform apply -auto-approve "$PLAN_FILE"  # Apply the plan
          else
            echo "Error: Terraform plan was not generated for $PLAN_FILE."
            exit 1  # Fail the step if the plan is not generated
          fi

      - name: Apply Terraform Plan (if plan exists)
        if: env.PLAN_EXISTS == 'true'
        run: |
          echo "Applying existing Terraform plan: $PLAN_FILE"
          terraform -chdir=./terraform apply -auto-approve "$PLAN_FILE"  # Apply the existing plan
